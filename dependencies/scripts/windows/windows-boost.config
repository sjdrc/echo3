#Skip boost as we will build using bjam here.
ONLY_SETUP=1

export CFLAGS=""
export LDFLAGS=""
export CONFIGURE="--disable-dependency-tracking --disable-shared --enable-static"
export CPPFLAGS=""

chmod +x bootstrap.sh
./bootstrap.sh --prefix=$ECHO_LIB_DIR --without-libraries=python,mpi --with-toolset=mingw

#Before building everything we need to modify the build configuration to use gcc. In the
#previous step we set the toolset to mingw, which uses the gcc compiler. Specifying gcc
#seems to assume a unix system which causes the build to fail, so we change the toolset
#back to gcc here. It is a hack, if there is a better solution then feel free to fix it.
sed -i 's/mingw/gcc/g' project-config.jam

./b2 -q toolset=gcc \
         link=static \
         threading=multi \
         --layout=system release \
         --prefix=$ECHO_LIB_DIR \
         --with-date_time \
         --with-filesystem \
         --with-chrono \
         --with-random \
         --with-regex \
         --with-system \
         --with-thread \
         --with-timer \
         $LIBRARIES \
         install 2>&1

#Uncomment this if you wish to build the debug libraries too. Unfortunately
#specifying release and debug may cause errors.
#./b2 -q toolset=gcc \
#         link=static \
#         threading=multi \
#         --layout=system debug \
#         --prefix=$ECHO_LIB_DIR \
#         --with-date_time \
#         --with-filesystem \
#         --with-chrono \
#         --with-regex \
#         --with-system \
#         --with-thread \
#         --with-timer \
#         $LIBRARIES \
#         install 2>&1
		 