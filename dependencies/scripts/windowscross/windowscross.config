export TOOL_CHAIN_PREFIX=x86_64-w64-mingw32
export CC=$TOOL_CHAIN_PREFIX-gcc-posix
export GCC=$TOOL_CHAIN_PREFIX-gcc-posix
export GXX=$TOOL_CHAIN_PREFIX-g++-posix
export CXX=$TOOL_CHAIN_PREFIX-g++-posix
export LD=$TOOL_CHAIN_PREFIX-g++-posix
export CXXCPP=$TOOL_CHAIN_PREFIX-cpp-posix
# -posix does not exist for ranlib
export RANLIB=$TOOL_CHAIN_PREFIX-ranlib
export AR=$TOOL_CHAIN_PREFIX-ar-posix
# -posix does not exist for as
export AS=$TOOL_CHAIN_PREFIX-as

export SYSROOT="/usr/$TOOL_CHAIN_PREFIX/"
export CFLAGS="-D_WIN32_WINNT=0x0601"
export LDFLAGS=""
export CONFIGURE="--disable-dependency-tracking --disable-shared --enable-static --host=$TOOL_CHAIN_PREFIX --target=$TOOL_CHAIN_PREFIX --build=x86_64-linux "
export CONFIGURE_OPTIONS=${CONFIGURE}
export CXXFLAGS="-D_WIN32_WINNT=0x0601 -std=c++17"
export CPPFLAGS=${CXXFLAGS}

# The toolchain file is in different places depending on whether you're building dependencies or a project from an installation
export ECHO_PLATFORM_TOOLCHAIN_LOCATION=${ECHO_ENGINE_INSTALL_DIR}/windowscross/config
if ! [ "${ECHO_DEP_SCRIPTS_DIR}" = "" ] ; then
	export ECHO_PLATFORM_TOOLCHAIN_LOCATION=${ECHO_DEP_SCRIPTS_DIR}/windowscross
fi

export CMAKE_OPTIONS_PLATFORM="-DCMAKE_CXX_STANDARD=17 -DHOST=$TOOL_CHAIN_PREFIX -DCMAKE_TOOLCHAIN_FILE=${ECHO_PLATFORM_TOOLCHAIN_LOCATION}/windowscross-toolchain.cmake"
