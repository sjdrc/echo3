USE_CMAKE=1
CMAKE_DIRECTORY="../cmake"

VERSION="3.9.2"
ARCHIVE_NAME=protobuf-cpp-${VERSION}.tar.gz
DOWNLOAD_URL="https://github.com/protocolbuffers/protobuf/releases/download/v${VERSION}/${ARCHIVE_NAME}"
CMAKE_OPTIONS="-Dprotobuf_BUILD_PROTOC_BINARIES=OFF -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_WITH_ZLIB=OFF -Dprotobuf_BUILD_CONFORMANCE=OFF -Dprotobuf_BUILD_SHARED_LIBS_DEFAULT=OFF -Dprotobuf_VERBOSE=ON"

#export CFLAGS="-g -O2 -Wall $MACHDEP -DGOOGLE_PROTOBUF_NO_THREAD_SAFETY -I$ECHO_LIB_DIR/include/ -I$DEVKITPRO/libogc/include"
#export LDFLAGS="-g $MACHDEP -L$DEVKITPRO/libogc/lib/wii -logc"
#export CPPFLAGS="$CFLAGS"
#CONFIGURE_OPTIONS="--disable-dependency-tracking --disable-shared --disable-tests --enable-static --with-protoc=protoc --host=powerpc-eabi --target=powerpc-eabi"

patch_prepare()
{
	echo "Copying ${ECHO_DEP_SCRIPTS_DIR}/${ECHO_PLATFORM}/protobuf/src/google/protobuf/stubs/mutex.h src/google/protobuf/stubs/mutex.h"
	cp ${ECHO_DEP_SCRIPTS_DIR}/${ECHO_PLATFORM}/protobuf/src/google/protobuf/stubs/mutex.h src/google/protobuf/stubs/mutex.h

	echo "Copying ${ECHO_DEP_SCRIPTS_DIR}/${ECHO_PLATFORM}/protobuf/src/google/protobuf/stubs/common.cc src/google/protobuf/stubs/common.cc"
	cp ${ECHO_DEP_SCRIPTS_DIR}/${ECHO_PLATFORM}/protobuf/src/google/protobuf/stubs/common.cc src/google/protobuf/stubs/common.cc

	echo "Replacing \"find_package(Threads REQUIRED)\" with \"add_definitions(-DLIBOGC_LWP_THREADS)\" to allow out mutex stub patch to work."
	sed -i 's/find_package(Threads REQUIRED)/add_definitions(-DLIBOGC_LWP_THREADS)/g' cmake/CMakeLists.txt

	echo "Adding libogc as include in CMakeLists.txt"
	sed -i 's/include_directories(/include_directories($ENV{DEVKITPRO}\/libogc\/include/g' cmake/CMakeLists.txt
	
	echo "Copying wii-pthread patch"
	cp "${ECHO_DEP_SCRIPTS_DIR}/${ECHO_PLATFORM}/wii-pthread.h" src/pthread.h
	#./autogen.sh
}

#VERSION="21.12"
#ARCHIVE_NAME=protobuf-cpp-3.${VERSION}.tar.gz
#DOWNLOAD_URL="https://github.com/protocolbuffers/protobuf/releases/download/v${VERSION}/${ARCHIVE_NAME}"

# See https://github.com/google/protobuf/issues/266 on why GOOGLE_PROTOBUF_NO_THREAD_SAFETY is defined.
#export CFLAGS="-g -O2 -Wall $MACHDEP -DGOOGLE_PROTOBUF_NO_THREAD_SAFETY -I$ECHO_LIB_DIR/include/ -I$DEVKITPRO/libogc/include"
#export LDFLAGS="-g $MACHDEP -L$DEVKITPRO/libogc/lib/wii -logc"
#export CPPFLAGS="$CFLAGS"
#export CONFIGURE="--disable-dependency-tracking --disable-shared --disable-tests --enable-static --with-protoc=protoc --with-sysroot=$SYSROOT --host=powerpc-eabi --target=powerpc-eabi"
#export CC=powerpc-eabi-gcc
#export GCC=powerpc-eabi-gcc
#export GXX=powerpc-eabi-g++
#export CXX=powerpc-eabi-g++
#export CXXCPP=powerpc-eabi-cpp
#export RANLIB=powerpc-eabi-ranlib
#export AR=powerpc-eabi-ar

#This makes protobuf think pthread is available but really we are just creating a wrapper around LWP
#cp "$ECHO_DEP_SCRIPTS_DIR/$ECHO_PLATFORM/wii-pthread.h" src/pthread.h

#NO_CONFIGURE=1
#chmod +x autogen.sh
#./autogen.sh
#./configure --prefix=$ECHO_LIB_DIR $CONFIGURE

patch_build()
{
	#sed -i 's/#define HAVE_HASH_MAP/\/\/#define HAVE_HASH_MAP/g' config.h
	#sed -i 's/#define HAVE_HASH_SET/\/\/#define HAVE_HASH_SET/g' config.h
	#sed -i 's/\/\* #undef HAVE_PTHREAD \*\//#define HAVE_PTHREAD/g' config.h

	#sed -i 's/libprotoc_la_SOURCES =.*$/libprotoc_la_SOURCES = dummy\.cc/g' src/Makefile
	#sed -i 's/\s*google\/protobuf\/compiler\/code_generator\.cc\s*\\/libprotoc_la_SOURCES_DUMMY = \\/g' src/Makefile
	#echo "//This file is has been generated by edepbuild to prevent libprotoc sources from causing errors for the Wii build.">src/dummy.cc

	#sed -i 's/#define GOOGLE_PROTOBUF_ATOMICOPS_ERROR\s*\\/#define GOOGLE_PROTOBUF_ATOMICOPS_ERROR_EDEPBUILD_FIX/g' src/google/protobuf/stubs/atomicops.h
	#sed -i 's/#error "Atomic operations are not supported on your platform"/\/\/#error "Atomic operations are not supported on your platform"/g' src/google/protobuf/stubs/atomicops.h

	#sed -i 's/GOOGLE_PROTOBUF_ATOMICOPS_ERROR$/#error "Atomic operations are not supported on your platform (code modified by edepbuild)"/g' src/google/protobuf/stubs/atomicops.h
	#sed -i 's/#undef GOOGLE_PROTOBUF_ATOMICOPS_ERROR$/#undef GOOGLE_PROTOBUF_ATOMICOPS_ERROR_EDEPBUILD_FIX/g' src/google/protobuf/stubs/atomicops.h

	RETURN_DIR=`pwd`
	cd src/google/protobuf/compiler/
	for f in *.cc
	do
		echo "//This file is has been generated by edepbuild to prevent libprotoc sources from causing errors for the Wii build.">$f
	done

	#echo "int main(){return 0;}">main.cc

	#cd cpp
	#for f in *.cc
	#do
	#	echo "//This file is has been generated by edepbuild to prevent libprotoc sources from causing errors for the Wii build.">$f
	#done

	#cd $RETURN_DIR
#}
