# Echo Configuration file.
# Use the Configuration class to load a config file in.
# The format is simply
#    settingname=value
# This file is intended as application settings. You can add your own settings which will be
# accessible through the object returned by Application::GetConfiguration(). You can also
# create your own Configuration objects and load your own configuration files for the same
# functionality

# Application resolution
resolution.x=800
resolution.y=600

window.title=MyProjectApplication

% # Resource lists. You can specify multiple lists by adding multiple lines of the same setting.
# All lists will be loaded.
mesh.list=resources/Characters/meshes.list
material.list=resources/Characters/materials.list
material.list=resources/Materials/materials.list
skeleton.list=resources/Characters/skeletons.list
font.list=resources/Fonts/fonts.list

# These settings are used to redirect stdout over a network connection. Both of the flags need to be set to 1 for it to work.
network=0
network.redirect.cout=1
network.redirect.cout.server=direct:127.0.0.1:20154

# Set up the game contexts.
# The first parameter is the name of the context, the second parameter is the name of the task.

# Main menu (start up) only shows the menu.
context=Resume("MainMenu","MainMenu")
context=Pause("MainMenu","Game")
context=Pause("MainMenu","Game.Renderer")

# No menu, just the game.
context=Resume("Game","Game")
context=Resume("Game","Game.Renderer")
context=Pause("Game","MainMenu")
context=Pause("Game","MainMenu.Menu")

# Pause menu renders the game in the background but displays the menu on top
context=Resume("GamePause","MainMenu")
context=Resume("GamePause","Main.Renderer")
context=Resume("GamePause","Game.Renderer")
context=Pause("GamePause","Game")

initial.context=MainMenu

# Input mapping
mapped.input.device=resources/Input/Player.input
